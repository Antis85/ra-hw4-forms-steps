{"version":3,"sources":["components/AddTrackForm.js","components/TrackTable.js","components/Tracker.js","App.js","index.js"],"names":["AddTrackForm","props","form","onChange","onSubmit","className","htmlFor","id","name","value","type","required","distance","step","TrackTable","table","onEdit","onRemove","tableItems","map","item","align","date","onClick","Tracker","initTable","initForm","useState","setTable","setForm","target","prevForm","newDate","split","join","evt","preventDefault","prevTable","find","exist","Number","toString","newTableArr","sort","a","b","sortFn","itemId","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d6b782e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddTrackForm(props) {\n  const { form, onChange, onSubmit } = props;\n\n  return (\n    <form className=\"AddTrackForm\" onSubmit={onSubmit}>\n      <div className=\"AddTrackForm-inputs-wrapper\">\n        <div className=\"AddTrackForm-input-wrapper date-wrapper\">\n          <label className=\"AddTrackForm-label label-date\" htmlFor=\"date\">\n            Дата (ДД.М.ГГ)\n          </label>\n          <input\n            className=\"AddTrackForm-input input-date\"\n            id=\"date\"\n            name=\"date\"\n            value={form.id}\n            type=\"date\"\n            required\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"AddTrackForm-input-wrapper distance-wrapper\">\n          <label\n            className=\"AddTrackForm-label label-distance\"\n            htmlFor=\"distance\"\n          >\n            Пройдено км\n          </label>\n          <input\n            className=\"AddTrackForm-input input-distance\"\n            id=\"distance\"\n            name=\"distance\"\n            value={form.distance}\n            type=\"number\"\n            step=\"any\"\n            required\n            onChange={onChange}\n          />\n        </div>\n\n        <button className=\"AddTrackForm-submit\" type=\"submit\">\n          Ок\n        </button>\n      </div>\n    </form>\n  );\n}\n\nAddTrackForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    distance: PropTypes.string.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function TrackTable(props) {\n  const { table, onEdit, onRemove } = props;\n  const tableItems = table.map((item) => (\n    <tr key={item.id} align=\"center\">\n      <td>{item.date}</td>\n      <td>{item.distance}</td>\n      <td>\n        <button\n          onClick={() => onEdit(item.id)}\n          className=\"TrackTable-button button-edit\"\n        >\n          &#9998;\n        </button>\n        <button\n          onClick={() => onRemove(item.id)}\n          className=\"TrackTable-button button-remove\"\n        >\n          &#10008;\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <table className=\"TrackTable-header\">\n        <thead>\n          <tr align=\"center\">\n            <th>Дата (ДД.М.ГГ)</th>\n            <th>Пройдено км</th>\n            <th>Действия</th>\n          </tr>\n        </thead>\n      </table>\n      <table className=\"TrackTable-body\">\n        <tbody>{tableItems}</tbody>\n      </table>\n    </>\n  );\n}\n\nTrackTable.propTypes = {\n  table: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      distance: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTrackForm from './AddTrackForm';\nimport TrackTable from './TrackTable';\n\nexport default function Tracker(props) {\n  const { initTable, initForm } = props;\n  const [table, setTable] = useState(initTable);\n  const [form, setForm] = useState(initForm);\n  const sortFn = (newTableArr) => {\n    const newTableArrSorted = newTableArr.sort(function (a, b) {\n      if (a.id === b.id) return 0;\n      return a.id < b.id ? 1 : -1;\n    });\n    return newTableArrSorted;\n  };\n\n  const handleChange = ({ target }) => {\n    setForm((prevForm) => {\n      if (target.name === 'date') {\n        const newDate = target.value.split('-');\n        const date = [newDate[2], newDate[1], newDate[0]].join('.');\n        return { ...prevForm, id: target.value, date };\n      }\n      return { ...prevForm, distance: target.value };\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setTable((prevTable) => {\n      const existDateSubmit = prevTable.find((exist) => exist.id === form.id);\n      if (existDateSubmit)\n        return prevTable.map((item) =>\n          item.id === form.id\n            ? {\n                ...item,\n                distance: (\n                  Number(item.distance) + Number(form.distance)\n                ).toString(),\n              }\n            : item\n        );\n      const newTableArr = [...prevTable, form];\n      return sortFn(newTableArr);\n    });\n\n    setForm({\n      id: '',\n      date: '',\n      distance: '',\n    });\n  };\n\n  const handleEdit = (itemId) => {\n    const { id, date, distance } = table.find((item) => item.id === itemId);\n    setForm(() => ({ id, date, distance }));\n  };\n\n  const handleRemove = (itemId) => {\n    setTable((prevTable) => prevTable.filter((item) => item.id !== itemId));\n  };\n\n  return (\n    <>\n      <AddTrackForm\n        form={form}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <TrackTable table={table} onEdit={handleEdit} onRemove={handleRemove} />\n    </>\n  );\n}\n\nTracker.propTypes = {\n  initTable: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      distance: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  initForm: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    distance: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import './App.css';\nimport Tracker from './components/Tracker';\n\nexport default function App() {\n  const table = [];\n  const form = {\n    id: '',\n    date: '',\n    distance: '',\n  };\n  return (\n    <div className=\"App\">\n      <Tracker className=\"Tracker\" initTable={table} initForm={form} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}